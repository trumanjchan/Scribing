{"ast":null,"code":"var _jsxFileName = \"/Users/trumanchan/scribing/Client/src/Components/LoadingBar/LoadingBar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useMemo, useState, useRef } from \"react\";\nimport './LoadingBar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LoadingBar(props) {\n  _s();\n\n  const [percentage, setPercentage] = useState(0);\n  useEffect(() => {\n    setPercentage(props.loadingData);\n  }, [props.loadingData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: props.userName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"LoadingBar\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: percentage + \"%\"\n        },\n        className: \"Percentage\",\n        children: [percentage, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LoadingBar, \"cpQp2rHDduFVXlGabXg1MafQewg=\");\n\n_c = LoadingBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoadingBar\");","map":{"version":3,"sources":["/Users/trumanchan/scribing/Client/src/Components/LoadingBar/LoadingBar.js"],"names":["React","useEffect","useMemo","useState","useRef","LoadingBar","props","percentage","setPercentage","loadingData","userName","width"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,OAA3B,EAAoCC,QAApC,EAA8CC,MAA9C,QAA4D,OAA5D;AACA,OAAO,kBAAP;;AAEA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACxC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,CAAD,CAA5C;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,aAAa,CAACF,KAAK,CAACG,WAAP,CAAb;AACD,GAFQ,EAEP,CAACH,KAAK,CAACG,WAAP,CAFO,CAAT;AAIA,sBACE;AAAA,4BACE;AAAA,gBAAKH,KAAK,CAACI;AAAX;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BACI;AAAK,QAAA,KAAK,EAAE;AAACC,UAAAA,KAAK,EAAEJ,UAAU,GAAG;AAArB,SAAZ;AAAuC,QAAA,SAAS,EAAC,YAAjD;AAAA,mBAA+DA,UAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GAfuBF,U;;KAAAA,U","sourcesContent":["import React, { useEffect, useMemo, useState, useRef } from \"react\";\nimport './LoadingBar.css';\n\nexport default function LoadingBar(props) {\n  const [percentage, setPercentage] = useState(0);\n\n  useEffect(() => {\n    setPercentage(props.loadingData)\n  },[props.loadingData]);\n\n  return(\n    <div>\n      <h3>{props.userName}</h3>\n      <div className=\"LoadingBar\">\n          <div style={{width: percentage + \"%\"}} className='Percentage'>{percentage}%</div>\n      </div>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}