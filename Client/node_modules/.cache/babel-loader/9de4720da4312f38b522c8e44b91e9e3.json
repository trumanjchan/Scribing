{"ast":null,"code":"import _slicedToArray from\"/Users/trumanchan/scribing/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import'./Leaderboard.css';import React,{useEffect,useMemo,useState,useRef}from\"react\";import Navbar from'../../Components/Navbar/Navbar';import TableMaker from'../../Components/TableMaker/TableMaker';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var axios=require('axios');export default function Leaderboard(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),highScoreList=_useState2[0],setHighScoreList=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),HSTitle=_useState4[0],setHSTitle=_useState4[1];useMemo(function(){axios.get('/top').then(function(response){setHighScoreList(parseRankName(response.data));setHSTitle([\"highscores\",\"Top 100 Leaderboard (All Time)\",\"#\",\"Name\",\"WPM\"]);}).catch(function(error){console.log(error);});},[]);function parseRankName(data){var result=[];for(var i=0;i<data.length;i++){result.push([i+1,data[i].firstName+\" \"+data[i].lastName,data[i].score]);}return result;}console.log(highScoreList);return/*#__PURE__*/_jsxs(\"div\",{className:\"Leaderboard\",children:[/*#__PURE__*/_jsx(Navbar,{fName:props.parentUser}),/*#__PURE__*/_jsx(\"div\",{className:\"Leaderboard-container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"display\",children:/*#__PURE__*/_jsx(TableMaker,{data:highScoreList,title:HSTitle})})})]});}","map":{"version":3,"sources":["/Users/trumanchan/scribing/Client/src/Pages/Leaderboard/Leaderboard.js"],"names":["React","useEffect","useMemo","useState","useRef","Navbar","TableMaker","axios","require","Leaderboard","props","highScoreList","setHighScoreList","HSTitle","setHSTitle","get","then","response","parseRankName","data","catch","error","console","log","result","i","length","push","firstName","lastName","score","parentUser"],"mappings":"wJAAA,MAAO,mBAAP,CACA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,OAA3B,CAAoCC,QAApC,CAA8CC,MAA9C,KAA4D,OAA5D,CACA,MAAOC,CAAAA,MAAP,KAAmB,gCAAnB,CACA,MAAOC,CAAAA,UAAP,KAAuB,wCAAvB,C,wFACA,GAAMC,CAAAA,KAAK,CAAGC,OAAO,CAAC,OAAD,CAArB,CAEA,cAAe,SAASC,CAAAA,WAAT,CAAqBC,KAArB,CAA4B,eACCP,QAAQ,CAAC,EAAD,CADT,wCAClCQ,aADkC,eACnBC,gBADmB,8BAEXT,QAAQ,CAAC,EAAD,CAFG,yCAElCU,OAFkC,eAEzBC,UAFyB,eAGzCZ,OAAO,CAAC,UAAM,CACZK,KAAK,CAACQ,GAAN,CAAU,MAAV,EACCC,IADD,CACM,SAAUC,QAAV,CAAoB,CACxBL,gBAAgB,CAACM,aAAa,CAACD,QAAQ,CAACE,IAAV,CAAd,CAAhB,CACAL,UAAU,CAAC,CAAC,YAAD,CAAc,gCAAd,CAA+C,GAA/C,CAAmD,MAAnD,CAA0D,KAA1D,CAAD,CAAV,CACD,CAJD,EAKCM,KALD,CAKO,SAAUC,KAAV,CAAiB,CACtBC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EACD,CAPD,EAQD,CATM,CASJ,EATI,CAAP,CAWE,QAASH,CAAAA,aAAT,CAAuBC,IAAvB,CAA4B,CAC1B,GAAIK,CAAAA,MAAM,CAAG,EAAb,CACA,IAAI,GAAIC,CAAAA,CAAC,CAAG,CAAZ,CAAeA,CAAC,CAAGN,IAAI,CAACO,MAAxB,CAAgCD,CAAC,EAAjC,CAAoC,CAClCD,MAAM,CAACG,IAAP,CAAY,CAACF,CAAC,CAAC,CAAH,CAAKN,IAAI,CAACM,CAAD,CAAJ,CAAQG,SAAR,CAAoB,GAApB,CAA0BT,IAAI,CAACM,CAAD,CAAJ,CAAQI,QAAvC,CAAiDV,IAAI,CAACM,CAAD,CAAJ,CAAQK,KAAzD,CAAZ,EACD,CACD,MAAON,CAAAA,MAAP,CACD,CACDF,OAAO,CAACC,GAAR,CAAYZ,aAAZ,EACA,mBACE,aAAK,SAAS,CAAC,aAAf,wBACE,KAAC,MAAD,EAAQ,KAAK,CAAED,KAAK,CAACqB,UAArB,EADF,cAEE,YAAK,SAAS,CAAC,uBAAf,uBACE,YAAK,SAAS,CAAC,SAAf,uBACE,KAAC,UAAD,EAAY,IAAI,CAAEpB,aAAlB,CAAiC,KAAK,CAAEE,OAAxC,EADF,EADF,EAFF,GADF,CAUD","sourcesContent":["import './Leaderboard.css';\nimport React, { useEffect, useMemo, useState, useRef } from \"react\";\nimport Navbar from '../../Components/Navbar/Navbar';\nimport TableMaker from '../../Components/TableMaker/TableMaker';\nconst axios = require('axios');\n\nexport default function Leaderboard(props) {\n  const [highScoreList, setHighScoreList] = useState([]);\n  const [HSTitle, setHSTitle] = useState([]);\n  useMemo(() => {\n    axios.get('/top')\n    .then(function (response) {\n      setHighScoreList(parseRankName(response.data));\n      setHSTitle([\"highscores\",\"Top 100 Leaderboard (All Time)\",\"#\",\"Name\",\"WPM\"]);\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n  }, []);\n\n    function parseRankName(data){\n      var result = []\n      for(var i = 0; i < data.length; i++){\n        result.push([i+1,data[i].firstName + \" \" + data[i].lastName, data[i].score])\n      }\n      return result\n    }\n    console.log(highScoreList)\n    return (\n      <div className=\"Leaderboard\">\n        <Navbar fName={props.parentUser}/>\n        <div className=\"Leaderboard-container\">\n          <div className=\"display\">\n            <TableMaker data={highScoreList} title={HSTitle}/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n"]},"metadata":{},"sourceType":"module"}